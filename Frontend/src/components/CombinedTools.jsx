// import React from "react";
// import { useState } from "react";
// import toolsinfo from "../utils/toolsInfo.json";

// const CombinedTools = () => {

//   const staticTools = toolsinfo["Static Analysis"]
//   const dynamicTools = toolsinfo["Dynamic Analysis"]
//   const malwareTools = toolsinfo["Malware Detection"]
//   const reverseTools = toolsinfo["Reverse Engineering"]
//   const networkTools = toolsinfo["Network/Web"]
//   const pentestingTools = toolsinfo["Pentesting Environment"]
//   const insecureTools = toolsinfo["Insecure Data Storage"]

//   console.log("Checking changes")

//   // Defining State variable for each tool.
//   const [selectedTools, setSelectedTools] = useState({
//     Androbug: false,
//     Androwarn: false,
//     Qark: false,
//     ApkLeaks: false,
//     Mobsf: false,
//     Drozer: false,
//     QuarkEngine: false,
//     SUPERAndroidAnalyzer: false,
//     VirusTotals: false,
//     Fortify: false,
//     VezirProject: false,
//     ApkTool: false,
//     nmap: false,
//     BurpSuite: false,
//     OWASPZAP: false,
//     Bettercap: false,
//     Immuniweb: false,
//     zANTI: false,
//     MWRLabsMercury: false,
//     Mallory: false,
//     Appie: false,
//     AndroidTamer: false,
//     Androl4b: false,
//     Movexler: false,
//     Objection: false,
//     Andriller: false,
//     FaceNiff: false,
//     Magisk: false,
//   });

//   const handleCheckboxChange = (event) => {
//     const { id, checked } = event.target;
//     setSelectedTools((prevState) => ({
//       ...prevState,
//       [id]: checked,
//     }));
//   };


//   // console.log("ApkInfo in frontend ", apkInfo);

//   const handleDeleteSelectedApk = () => {
//     if (selectedApks.length > 0) {
//       handleApkDelete(selectedApks[0]); // Assuming you only want to delete the first selected APK
//     }
//   };

//   const handleClick = () => {
//     const selected = Object.keys(selectedTools).filter((key) => selectedTools[key]);
//     console.log("Selected tools:", selected);
//   };

//   return (
//     <>
//     <div className="apk2" style={{
//         // border: "2px solid black",
//         padding: "20px",
//         margin: "auto",
//         display: "flex",
//         flexDirection: "row",
//         justifyContent: "center",
//         alignItems: "center",
//         flexWrap: "wrap"
//     }}>
//         <div className="file-input-container">
//             <label htmlFor="file-input" className="custom-file-upload" style={{
//                 marginTop: "10px"
//             }}>
//             Choose File 
//             </label>
//             <br />
//             <input type="file" accept=".apk" id="file-input" className="custom-file-input" style={{
//                 border: "2px solid black",
//                 padding: "10px",
//                 height : "52px"
//             }}/>
//         </div>
//         <div className="ip-input-container">
//             <label htmlFor="ip-input" className="custom-ip-upload" style={{
//                 marginLeft: "20px",
//                 marginTop: "10px"
//             }}>
//                 Type IP Address 
//             </label>
//             <br />
//             <input type="text" placeholder="0.0.0.0" style={{
//                 border: "2px solid black",
//                 padding: "10px",
//                 marginLeft: "20px",
//                 height : "52px"
//             }}/>
//         </div>
//     </div>
//     <div className="container">
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//         <h4>Static Anlysis</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {staticTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//                 <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//                 <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//               </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//           <h4>Dynamic Anlysis</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {dynamicTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//               <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//               <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//             </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//           <h4>Malware Detection</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {malwareTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//               <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//               <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//             </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//           <h4>Reverse Engineering</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {reverseTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//               <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//               <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//             </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//           <h4>Network/web</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {networkTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//               <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//               <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//             </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//           <h4>Prenetration Testing</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {pentestingTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//               <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//               <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//             </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div className="card bg-light mb-3">
//         <div className="card-body">
//           <h4>Insecure Data Storage</h4>
//           <div style={{display:"flex",flexWrap:"wrap"}}>
//             {insecureTools.map((tool,index) => (
//               <div key={index} className="card-body-tool">
//               <input type="checkbox" id={tool.name} onChange={handleCheckboxChange}/>
//               <label htmlFor={tool.name} style={{ marginRight: '20px' }}>{tool.name}</label>
//             </div>
//             ))}
//           </div>
//         </div>
//       </div>
//       <div>
//         <button type="button" className="btn btn-primary" onClick={handleClick} style={{marginBottom:"20px"}}>Run</button>
//       </div>
//     </div>
//   </>
//   );
// }

// export default CombinedTools;


import React, { useState } from "react";
import toolsinfo from "../utils/toolsInfo.json";

// Utility function to generate the initial state
const generateInitialState = (toolsinfo) => {
  const initialState = {};
  Object.keys(toolsinfo).forEach((category) => {
    toolsinfo[category].forEach((tool) => {
      initialState[tool.name] = false;
    });
  });
  return initialState;
};

const CombinedTools = () => {
  const initialState = generateInitialState(toolsinfo);

  const [selectedTools, setSelectedTools] = useState(initialState);

  const handleCheckboxChange = (event) => {
    const { id, checked } = event.target;
    setSelectedTools((prevState) => ({
      ...prevState,
      [id]: checked,
    }));
  };

  const handleClick = () => {
    const selected = Object.keys(selectedTools).filter((key) => selectedTools[key]);
    console.log("Selected tools:", selected);
  };

  return (
    <>
      <div
        className="apk2"
        style={{
          padding: "20px",
          margin: "auto",
          display: "flex",
          flexDirection: "row",
          justifyContent: "center",
          alignItems: "center",
          flexWrap: "wrap",
        }}
      >
        <div className="file-input-container">
          <label
            htmlFor="file-input"
            className="custom-file-upload"
            style={{ marginTop: "10px" }}
          >
            Choose File
          </label>
          <br />
          <input
            type="file"
            accept=".apk"
            id="file-input"
            className="custom-file-input"
            style={{
              border: "2px solid black",
              padding: "10px",
              height: "52px",
            }}
          />
        </div>
        <div className="ip-input-container">
          <label
            htmlFor="ip-input"
            className="custom-ip-upload"
            style={{
              marginLeft: "20px",
              marginTop: "10px",
            }}
          >
            Type IP Address
          </label>
          <br />
          <input
            type="text"
            placeholder="0.0.0.0"
            style={{
              border: "2px solid black",
              padding: "10px",
              marginLeft: "20px",
              height: "52px",
            }}
          />
        </div>
      </div>
      <div className="container">
        {Object.keys(toolsinfo).map((category, categoryIndex) => (
          <div key={categoryIndex} className="card bg-light mb-3">
            <div className="card-body">
              <h4>{category}</h4>
              <div style={{ display: "flex", flexWrap: "wrap" }}>
                {toolsinfo[category].map((tool, toolIndex) => (
                  <div key={toolIndex} className="card-body-tool">
                    <input
                      type="checkbox"
                      id={tool.name}
                      onChange={handleCheckboxChange}
                    />
                    <label htmlFor={tool.name} style={{ marginRight: "20px" }}>
                      {tool.name}
                    </label>
                  </div>
                ))}
              </div>
            </div>
          </div>
        ))}
        <div>
          <button
            type="button"
            className="btn btn-primary"
            onClick={handleClick}
            style={{ marginBottom: "20px" }}
          >
            Run
          </button>
        </div>
      </div>
    </>
  );
};

export default CombinedTools;
