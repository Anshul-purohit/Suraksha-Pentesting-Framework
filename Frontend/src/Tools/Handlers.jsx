// import axios from "axios";

// const Handlers = ({ handle, input }) => {

//   const [loading, setLoading] = useState(false);
//   const [result, setResult] = useState(null);
//   const [error, setError] = useState(null);

//     // console.log("Inside Handlers Function");
  
//   const AndrowarnHandler = () => {
//     console.log("GDGHDGOGHDo : ",input)
//     axios
//     .post("http://localhost:4002/run-command", {
//       tool: "Androwarn",
//       apkInfo: input,
//     })
//     .then((response) => {
//       console.log("----------------------");
//       console.log("response : ", response.data);
//       console.log("----------------------");
//       setResult(response.data || "No result available");
//       generateSections(response.data);
//     })
//     .catch((error) => {
//       console.error(error);
//     })  


//     return <h1>Inside Androwarn Handler</h1>;
//   };

//   const AndrobugsHandler = () => {
//     const command = {
//       tool: "Androwarn",
//       apkInfo: uploadResponse.data, // assuming uploadResponse.data contains necessary info
//     };
//     commandResponse = await axios.post("http://localhost:4002/run-command", command);

//     return <h1>Inside Androbugs Handler</h1>;
//   };

//   const QarkHandler = () => {
//     return <h1>Inside Qark Handler</h1>
//   }

//   return (
//     <div>
//       {console.log("handle : ", handle)}
//       {handle === "AndrobugsHandler" && <AndrobugsHandler />}
//       {handle === "AndrowarnHandler" && <AndrowarnHandler />}
//       {handle === "QarkHandler" && <QarkHandler />}
//     </div>
//   );
// };

// export default Handlers;
  



import React, { useEffect, useState } from "react";
import axios from "axios";

const Handlers = ({ tool, handlerType, file }) => {
  console.log("HANDLER : ",handlerType)
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    const runCommand = async () => {
      setLoading(true);

      try {
        // Upload the APK file first
        const formData = new FormData();
        formData.append("apkFile", file);

        const uploadResponse = await axios.post("http://localhost:4002/upload", formData);
        console.log("File upload response:", uploadResponse.data);

        // Execute command based on the selected tool
        let commandResponse;
        if (tool === "Androwarn") {
          const command = {
            tool: "Androwarn",
            apkInfo: uploadResponse.data, // assuming uploadResponse.data contains necessary info
          };
          commandResponse = await axios.post("http://localhost:4002/run-command", command);
        } else if (tool === "Androbugs") {
          // Implement Androbugs command execution
          // Example:
          // commandResponse = await axios.post("http://localhost:4002/run-command", { ... });
        } else if (tool === "qark") {
          // Implement qark command execution
          // Example:
          // commandResponse = await axios.post("http://localhost:4002/run-command", { ... });
        } else {
          throw new Error("Invalid tool selected");
        }

        console.log("Command execution response:", commandResponse.data);
        setResult(commandResponse.data);
      } catch (error) {
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    if (tool && handlerType && file) {
      runCommand();
    }
  }, [tool, handlerType, file]);

  return (
    <div className="handlers">
      {loading && <p>Loading...</p>}
      {error && <p>Error: {error}</p>}
      {result && (
        <div>
          <h3>Command Result:</h3>
          <pre>{JSON.stringify(result, null, 2)}</pre>
        </div>
      )}
    </div>
  );
};

export default Handlers;
